https://www.cnblogs.com/zzsdream/p/10211892.html：子级监听父级的变化
vue 路由跳转带参数
2018-11-01 17:05:21 qq_28687183 阅读数 243
1  params 传参
注意⚠️：params传参 ，路径不能使用path 只能使用name,不然获取不到传的数据

this.$router.push({name: 'dispatch', params: {paicheNo: obj.paicheNo}})

 

取数据：this.$route.params.paicheNo

2   query传参
this.$router.push({path: '/transport/dispatch', query: {paicheNo: obj.paicheNo}})

取数据：this.$route.query.paicheNo
3.this.$router.push({path: 'ListsDestail', query: {clickType: e.clickType,dataId:e.dataId}})
4.<router-link :to="{path: 'ListsDestail', params: {clickType:item.clickType, dataId: item.id},query: {clickType:item.clickType, dataId: item.id}}"> -->
5.子组件向父组件传值
https://blog.csdn.net/sisi_chen/article/details/81635216
6.vuex来管理我们用户填写的地址。
 https://www.codercto.com/a/46381.html
 7.vueX存储数据
 export default new Vuex.Store({
	state: {
		// 登录状态
		token: '',
		// 地址管理
		addressList: [{
				id: 1,
				username: "小明",
				phone: '15612345678',
				addressDetail: "广东省广州市天河区大观中路49号科汇园G栋楼403"
			},
			{
				id: 2,
				username: "小红",
				phone: '13812345678',
				addressDetail: "广东省广州市天河区大观中路49号科汇园G栋4楼403"
			},
			{
				id: 3,
				username: "小花",
				phone: '18612345678',
				addressDetail: "广东省广州市天河区大观中路49号科汇园G栋4楼403"
			}
		]，
  nameLists:[{
			name:'People',
			age:'12',
			phone:'12345678987',
			addr:'广东天河区大观中路'
		},{
			name:'Mary',
			age:'15',
			phone:'12345678987',
			addr:'广东天河区大观中路'
		}]
		
	},
 通过地址的id获取到点击选中的地址
	getters: {
		getAddress: (state, getters) => (id) => {
			return state.addressList.find(address => address.id === id)
		}
	},
 通过新增地址追加到地址列表中
	mutations: {
		set_token(state, token) {
			state.token = token
			sessionStorage.token = token
		},
		del_token(state) {
			state.token = ''
			sessionStorage.removeItem('token')
		},
		// 地址管理
		addAddress(state, address) {
			return state.addressList.push(address)
		}
	}
})
从vueX中取出数据
import { mapState } from 'vuex'
 computed: {
        ...mapState(["addressList"，"nameLists"])
   },
   created(){
   console.log(this.addressList)
   }
 vue 中使用vuex和localStorage保存登录状态
 


需求：刷新页面，登录状态不会因此改变

首先说一下vuex和localStorage的区别

1.实质区别
vuex存的是状态，存储在内存；localStorage是浏览器提供的接口，让你存的是接口，以文件的形式存储到本地
2.应用场景
vuex用于组件之间的传值，localStorage则主要用于页面之间的传值
3.永久性
 当刷新页面时，vuex存储的值会丢失，localStorage不会
总结
localStorage可以代替vuex，对于不变的数据确实可以，但是当两个组件共同用以数据源，如果其中一个组件中的数据源改变，希望另一个组件响应变化，这时候就要选择用vuex。vuex是vue的状态管理机制，是方便组件之间通信的。一个组件的数据变化是会映射到使用这个数据的其他组件。而localStorage是本地存储，是将数据存储到浏览器的方法，一般在跨页面时使用。

注意：localStorage 保存对象的时候，需要先将对象转换成json字符串，然后获取的时候在转换成对象形式
以及在App.vue中添加：
	mounted() {
            window.addEventListener('unload', this.saveState)
        },
        methods: {
            saveState() {
                sessionStorage.setItem('state', JSON.stringify(this.$store.state))
            }
        }
更改store文件下index文件state的定义
	const store = new Vuex.Store({
    state:sessionStorage.getItem('state') ? JSON.parse(sessionStorage.getItem('state')): {
        //id
        skillId:'',
        //技能状态
        checkStatus:''
    }
})
	
vue - 将数据存入vuex中以及从vuex中取出数据
https://blog.csdn.net/liaofengji/article/details/95181156
Vuex的使用详解及理解：
 https://www.jianshu.com/p/27aae39f0f87
 
